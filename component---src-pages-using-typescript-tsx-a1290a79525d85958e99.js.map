{"version":3,"file":"component---src-pages-using-typescript-tsx-a1290a79525d85958e99.js","mappings":"wMA4CaA,EAA0B,kBAAMC,EAAAA,cAACC,EAAAA,EAAD,CAAKC,MAAM,oBAAjD,EAEP,UAjCwD,SAAC,GAAD,IACtDC,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,KACAC,EAHsD,EAGtDA,SAHsD,OAKtDL,EAAAA,cAACM,EAAAA,EAAD,CAAQJ,MAAM,mBAAmBG,SAAUA,GACzCL,EAAAA,cAAAA,KAAAA,KAAAA,0CACAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,YAD3C,+DAE8CA,EAAAA,cAAAA,KAAAA,KAAAA,eAF9C,wEAKAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,cAD3C,oBAEMA,EAAAA,cAAAA,KAAAA,KAAAA,cAFN,gBAEsCA,EAAAA,cAAAA,KAAAA,KAAAA,YAFtC,UAIAA,EAAAA,cAAAA,IAAAA,KAAAA,kCACiCI,EADjC,uBAC2D,IACxDD,EAAKI,KAAKC,UAFb,KAIAR,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGS,KAAK,6CAAR,kCAFF,KAOAT,EAAAA,cAACU,EAAAA,KAAD,CAAMC,GAAG,KAAT,2BA3BJ,C,8ECgDA,EA3DoB,WAClB,IAAMC,EAAoBC,aAAaC,QAAQ,SACzCC,EAAcC,OAAOC,WAAW,gCAAgCC,QAClE,OACA,QAEJ,GAA0BC,EAAAA,EAAAA,UAASP,GAAqBG,GAAjDK,EAAP,KAAcC,EAAd,KAaA,OACE,0BACEC,QAbW,WACb,IAAMC,EAAsB,UAAVH,EAAoB,OAAS,QAC/CP,aAAaW,QAAQ,QAASD,GAC9BF,EAASE,GACS,SAAdA,EACFE,SAASC,gBAAgBC,UAAUC,IAAI,QAEvCH,SAASC,gBAAgBC,UAAUE,OAAO,OAE7C,EAKGC,UAAU,kGAEC,SAAVV,EACC,uBACEW,MAAM,6BACND,UAAU,UACVE,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPC,YAAa,GAEb,wBACEC,cAAc,QACdC,eAAe,QACfC,EAAE,2FAIN,uBACEP,MAAM,6BACND,UAAU,UACVE,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPC,YAAa,GAEb,wBACEC,cAAc,QACdC,eAAe,QACfC,EAAE,2JAMb,EC1BD,EA7Be,SAAC,GAAe,IAAbpC,EAAY,EAAZA,MAChB,OACE,0BAAQ4B,UAAU,mJAChB,uBAAKA,UAAU,4DACb,gBAAC,EAAApB,KAAD,CAAMC,GAAI,IAAKmB,UAAU,sBACtB5B,EACD,wBAAM4B,UAAU,mBAAhB,OAGF,uBAAKA,UAAU,cACb,uBACES,MAAM,KACNC,OAAO,KACPR,KAAK,eACLS,MAAM,kDAEN,wBACEC,SAAS,UACTC,SAAS,UACTL,EAAE,6tBAGN,gBAAC,EAAD,QAKT,ECPD,EArBe,SAAC,GAAkC,EAAhCjC,SAAiC,IAAvBH,EAAsB,EAAtBA,MAAO0C,EAAe,EAAfA,SAIjC,OACE,uBAAKd,UAAU,8BACb,gBAAC,EAAD,CAAQ5B,MAAOA,IACf,wBAAM4B,UAAU,aACd,uBAAKA,UAAU,qBAAqBc,IAEtC,0BAAQd,UAAU,6EAChB,+BACG,qCADH,KACoB,IAAIe,MAAOC,cAD/B,mBAGE,qBAAGrC,KAAK,4BAAR,YAKT,C,+CCXKR,EAAM,SAAC,GAA4C,IAAD,MAAzC8C,EAAyC,EAAzCA,YAAmB7C,GAAsB,EAA5B8C,KAA4B,EAAtB9C,OAAO0C,EAAe,EAAfA,SAC/BrC,GAAS0C,EAAAA,EAAAA,gBAAe,cAAxB1C,KAgBF2C,EAAkBH,GAAexC,EAAK4C,aAAaJ,YACnDK,EAAY,UAAG7C,EAAK4C,oBAAR,aAAG,EAAmBjD,MAExC,OACE,gCACE,6BACGkD,GAAkBlD,EAAWA,EAAN,UAAwBkD,EAAiBlD,GAEnE,wBAAMmD,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASpD,IACnC,wBAAMqD,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAAS,UAAA/C,EAAK4C,oBAAL,mBAAmBK,cAAnB,eAA2BC,UAA3B,KAEX,wBAAMJ,KAAK,gBAAgBC,QAASpD,IACpC,wBAAMmD,KAAK,sBAAsBC,QAASJ,IACzCN,EAGN,EAED3C,EAAIyD,aAAe,CACjBX,YAAY,IAQd,K","sources":["webpack://curlyjun-blog/./src/pages/using-typescript.tsx","webpack://curlyjun-blog/./src/components/ThemeToggle.jsx","webpack://curlyjun-blog/./src/components/Header.jsx","webpack://curlyjun-blog/./src/components/layout.js","webpack://curlyjun-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React, { useState } from \"react\"\n\nconst ThemeToggle = () => {\n  const localStorageTheme = localStorage.getItem(\"theme\")\n  const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ? \"dark\"\n    : \"light\"\n\n  const [theme, setTheme] = useState(localStorageTheme || systemTheme)\n\n  const toggle = () => {\n    const nextTheme = theme === \"light\" ? \"dark\" : \"light\"\n    localStorage.setItem(\"theme\", nextTheme)\n    setTheme(nextTheme)\n    if (nextTheme === \"dark\") {\n      document.documentElement.classList.add(\"dark\")\n    } else {\n      document.documentElement.classList.remove(\"dark\")\n    }\n  }\n\n  return (\n    <button\n      onClick={toggle}\n      className=\"rounded-full transition-colors p-1 text-violet-300 hover:bg-slate-200  dark:hover:bg-slate-600\"\n    >\n      {theme === \"dark\" ? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-6\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          strokeWidth={2}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n          />\n        </svg>\n      ) : (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-6\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          strokeWidth={2}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n          />\n        </svg>\n      )}\n    </button>\n  )\n}\n\nexport default ThemeToggle\n","import { Link } from \"gatsby\"\nimport * as React from \"react\"\nimport ThemeToggle from \"./ThemeToggle\"\n\nconst Header = ({ title }) => {\n  return (\n    <header className=\"sticky top-0 px-4 bg-white/95 backdrop-blur-sm z-10 border-b border-b-violet-200 dark:bg-slate-900/95 dark:text-sky-100 dark:border-b-slate-700\">\n      <div className=\"flex justify-between items-center py-2 mx-auto max-w-3xl\">\n        <Link to={\"/\"} className=\"text-2xl font-bold\">\n          {title}\n          <span className=\"text-violet-300\">()</span>\n        </Link>\n\n        <div className=\"flex gap-1\">\n          <svg\n            width=\"24\"\n            height=\"24\"\n            fill=\"currentColor\"\n            class=\"text-purple-600 mr-3 text-opacity-50 transform\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M12 2C6.477 2 2 6.463 2 11.97c0 4.404 2.865 8.14 6.839 9.458.5.092.682-.216.682-.48 0-.236-.008-.864-.013-1.695-2.782.602-3.369-1.337-3.369-1.337-.454-1.151-1.11-1.458-1.11-1.458-.908-.618.069-.606.069-.606 1.003.07 1.531 1.027 1.531 1.027.892 1.524 2.341 1.084 2.91.828.092-.643.35-1.083.636-1.332-2.22-.251-4.555-1.107-4.555-4.927 0-1.088.39-1.979 1.029-2.675-.103-.252-.446-1.266.098-2.638 0 0 .84-.268 2.75 1.022A9.606 9.606 0 0112 6.82c.85.004 1.705.114 2.504.336 1.909-1.29 2.747-1.022 2.747-1.022.546 1.372.202 2.386.1 2.638.64.696 1.028 1.587 1.028 2.675 0 3.83-2.339 4.673-4.566 4.92.359.307.678.915.678 1.846 0 1.332-.012 2.407-.012 2.734 0 .267.18.577.688.48C19.137 20.107 22 16.373 22 11.969 22 6.463 17.522 2 12 2z\"\n            ></path>\n          </svg>\n          <ThemeToggle />\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import * as React from \"react\"\nimport Header from \"./Header\"\n\nconst Layout = ({ location, title, children }) => {\n  // const rootPath = `${__PATH_PREFIX__}/`\n  // const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className=\"relative dark:bg-slate-900\">\n      <Header title={title} />\n      <main className=\"px-4 pt-4\">\n        <div className=\"max-w-3xl mx-auto\">{children}</div>\n      </main>\n      <footer className=\"max-w-3xl p-4 flex justify-end items-end mx-auto h-24 dark:text-slate-300\">\n        <div>\n          Â©<b>curlyjun</b> {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>\n        {defaultTitle ? `${title ? `${title} | ` : ``}${defaultTitle}` : title}\n      </title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","data","path","location","Layout","site","buildTime","href","Link","to","localStorageTheme","localStorage","getItem","systemTheme","window","matchMedia","matches","useState","theme","setTheme","onClick","nextTheme","setItem","document","documentElement","classList","add","remove","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","width","height","class","fillRule","clipRule","children","Date","getFullYear","description","lang","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps"],"sourceRoot":""}